#!/bin/zsh

# Set DOTPATH as default variable
if [ -z "${DOTPATH:-}" ]; then
  DOTPATH=~/.dotfiles
  export DOTPATH
fi

DOTFILES_GITHUB="https://github.com/ukitomato/dotfiles.git"
export DOTFILES_GITHUB

dotfiles_download() {
  if [ -d "$DOTPATH" ]; then
    printf "$DOTPATH: already exists"
    exit 1
  fi

  printf "Downloading dotfiles..."

  if is_exists "git"; then
    # --recursive equals to ...
    # git submodule init
    # git submodule update
    git clone --recursive "$DOTFILES_GITHUB" "$DOTPATH"

  elif is_exists "curl" || is_exists "wget"; then
    # curl or wget
    local tarball="https://github.com/ukitomato/dotfiles/archive/master.tar.gz"
    if is_exists "curl"; then
      curl -L "$tarball"

    elif is_exists "wget"; then
      wget -O - "$tarball"

    fi | tar xvz
    if [ ! -d dotfiles-master ]; then
      printf "dotfiles-master: not found"
      exit 1
    fi
    command mv -f dotfiles-master "$DOTPATH"

  else
    printf "curl or wget required"
    exit 1
  fi
  printf "Downloaded"
}

dotfiles_deploy() {
  printf "Deploying dotfiles..."

  if [ ! -d $DOTPATH ]; then
    printf "$DOTPATH: not found"
    exit 1
  fi

  cd "$DOTPATH"

  make deploy &&
    printf "Deploy"
}

dotfiles_initialize() {
  printf "Initializing dotfiles..."

  if [ -f Makefile ]; then
    #DOTPATH="$(dotpath)"
    #export DOTPATH
    #bash "$DOTPATH"/etc/init/init.sh
    make init
  else
    printf "Makefile: not found"
    exit 1
  fi &&
    printf "Initialized"

}

# A script for the file named "install"
dotfiles_install() {
  # 1. Download the repository
  # ==> downloading
  #
  # Priority: git > curl > wget
  dotfiles_download &&

    # 2. Deploy dotfiles to your home directory
    # ==> deploying
    dotfiles_deploy &&

    # 3. Execute all sh files within etc/init/
    # ==> initializing
    dotfiles_initialize
}

dotfiles_install
printf "Restarting your shell..."
exec "${SHELL:-/bin/zsh}"
